
<?xml version='1.0' encoding='UTF-8'?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject plugin="jenkins-multijob-plugin@1.13">
  <actions/>
  <description>This job is the pipeline template used when automatically creating a Jenkins pipeline job for new/additional branches in the repository.&#xd;
&#xd;
      The layout is as follows:&#xd;
      Main Job (P1):&#xd;
      * Retrieve feature branch from the repository&#xd;
      * Merge release testing branch into the feature branch (locally)&#xd;
      * Multi Phase Job: Setup or pre-test&#xd;
      * Compile project job&#xd;
      * Create database templates job&#xd;
      * Multi Phase Job: Load database&#xd;
      * Multi Phase Job: Testing&#xd;
      * Unit test job&#xd;
      * Static Analysis test job&#xd;
      * Documentation job&#xd;
      * Multi Phase Job: Integration tests&#xd;
      * Multi Phase Job: Install and Archive&#xd;
      * Install to Maven m2 repository and archive artifacts to Artifactory job&#xd;
      * Multi Phase Job: Deploy and Run Functional tests&#xd;
      * Update Rally tasks and post robot tests to Rally&#xd;
      * Publish robot test results to Jenkins&#xd;
      * Publish or push local repository to Github repository&#xd;
      * Publish build to Rally&#xd;
      * Teardown database&#xd;
      * Delete workspace&#xd;
   </description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>1</daysToKeep>
    <numToKeep>3</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.nirima.jenkins.plugins.docker.DockerJobProperty plugin="docker-plugin@0.8">
      <tagOnCompletion>false</tagOnCompletion>
      <additionalTag></additionalTag>
      <pushOnSuccess>false</pushOnSuccess>
      <cleanImages>false</cleanImages>
    </com.nirima.jenkins.plugins.docker.DockerJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.24"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.7">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/medullan/mean.git</url>
        <credentialsId>78ebbcc0-bc6e-45d7-846c-8af2d23a3b21</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>ci-build</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.PerBuildTag/>
      <hudson.plugins.git.extensions.impl.PruneStaleBranch/>
      <hudson.plugins.git.extensions.impl.AuthorInChangelog/>
      <hudson.plugins.git.extensions.impl.PreBuildMerge>
        <options>
          <mergeRemote>origin</mergeRemote>
          <mergeTarget>master</mergeTarget>
          <mergeStrategy>resolve</mergeStrategy>
        </options>
      </hudson.plugins.git.extensions.impl.PreBuildMerge>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.9.1">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <customWorkspace>/var/lib/jenkins/workspaces/${JOB_NAME}/workspace/${BUILD_TAG}/</customWorkspace>
  <builders>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>Phase: Setup</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>MEAN-Install_Dependencies</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters plugin="parameterized-trigger@2.25">
              <properties>FIXED_PATH_WS=//var//lib//jenkins//workspaces//${JOB_NAME}//workspace//${BUILD_TAG}
UNESCAPED_FIXED_PATH_WS=/var/lib/jenkins/workspaces/${JOB_NAME}/workspace/${BUILD_TAG}
MASTER_BUILD_TAG = ${BUILD_TAG}</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <hudson.plugins.parameterizedtrigger.NodeParameters plugin="parameterized-trigger@2.25"/>
          </configs>
          <killPhaseOnJobResultCondition>FAILURE</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>SUCCESSFUL</continuationCondition>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>Phase: Testing</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>MEAN-Run_Tests</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters plugin="parameterized-trigger@2.25">
              <properties>FIXED_PATH_WS=//var//lib//jenkins//workspaces//${JOB_NAME}//workspace//${BUILD_TAG}
UNESCAPED_FIXED_PATH_WS=/var/lib/jenkins/workspaces/${JOB_NAME}/workspace/${BUILD_TAG}
MASTER_BUILD_TAG = ${BUILD_TAG}</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <hudson.plugins.parameterizedtrigger.NodeParameters plugin="parameterized-trigger@2.25"/>
          </configs>
          <killPhaseOnJobResultCondition>FAILURE</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>MEAN-Documentation</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters plugin="parameterized-trigger@2.25">
              <properties>FIXED_PATH_WS=//var//lib//jenkins//workspaces//${JOB_NAME}//workspace//${BUILD_TAG}
UNESCAPED_FIXED_PATH_WS=/var/lib/jenkins/workspaces/${JOB_NAME}/workspace/${BUILD_TAG}
MASTER_BUILD_TAG = ${BUILD_TAG}</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <hudson.plugins.parameterizedtrigger.NodeParameters plugin="parameterized-trigger@2.25"/>
          </configs>
          <killPhaseOnJobResultCondition>FAILURE</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>SUCCESSFUL</continuationCondition>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>Phase: Deploy and Run functional tests</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>MEAN-Functional_Tests_Block</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters plugin="parameterized-trigger@2.25">
              <properties>FIXED_PATH_WS=//var//lib//jenkins//workspaces//${JOB_NAME}//workspace//${BUILD_TAG}
UNESCAPED_FIXED_PATH_WS=/var/lib/jenkins/workspaces/${JOB_NAME}/workspace/${BUILD_TAG}
MASTER_BUILD_TAG = ${BUILD_TAG}</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <hudson.plugins.parameterizedtrigger.NodeParameters plugin="parameterized-trigger@2.25"/>
          </configs>
          <killPhaseOnJobResultCondition>FAILURE</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>SUCCESSFUL</continuationCondition>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>Update Rally</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>MEAN-Update_Rally</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters plugin="parameterized-trigger@2.25">
              <properties>FIXED_PATH_WS=//var//lib//jenkins//workspaces//${JOB_NAME}//workspace//${BUILD_TAG}
UNESCAPED_FIXED_PATH_WS=/var/lib/jenkins/workspaces/${JOB_NAME}/workspace/${BUILD_TAG}
MASTER_BUILD_TAG = ${BUILD_TAG}</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <killPhaseOnJobResultCondition>FAILURE</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>SUCCESSFUL</continuationCondition>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
  </builders>
  <publishers>
    <htmlpublisher.HtmlPublisher plugin="htmlpublisher@1.3">
      <reportTargets>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>UI Code Coverage (Istanbul)</reportName>
          <reportDir>.reports/coverage/ui/phantomjs/lcov-report</reportDir>
          <reportFiles>index.html</reportFiles>
          <keepAll>false</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>NG Docs</reportName>
          <reportDir>.reports/docs/ngdocs</reportDir>
          <reportFiles>index.html</reportFiles>
          <keepAll>false</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>NodeJS Docs</reportName>
          <reportDir>.reports/docs/doxx</reportDir>
          <reportFiles>index.html</reportFiles>
          <keepAll>false</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>Server Code Coverage (Istanbul)</reportName>
          <reportDir>.reports/coverage/server/lcov-report</reportDir>
          <reportFiles>index.html</reportFiles>
          <keepAll>false</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>Server Metrics Report</reportName>
          <reportDir>.reports/plato/server</reportDir>
          <reportFiles>index.html</reportFiles>
          <keepAll>false</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>UI Metrics Report</reportName>
          <reportDir>.reports/plato/ui</reportDir>
          <reportFiles>index.html</reportFiles>
          <keepAll>false</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>Robot Code Coverage (Istanbul)</reportName>
          <reportDir>.reports/coverage/robot/lcov-report</reportDir>
          <reportFiles>index.html</reportFiles>
          <keepAll>false</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
      </reportTargets>
    </htmlpublisher.HtmlPublisher>
    <hudson.plugins.robot.RobotPublisher plugin="robot@1.5.0">
      <outputPath>${WORKSPACE}/.reports/robot/</outputPath>
      <reportFileName>report.html</reportFileName>
      <logFileName>log.html</logFileName>
      <outputFileName>output.xml</outputFileName>
      <disableArchiveOutput>false</disableArchiveOutput>
      <passThreshold>0.0</passThreshold>
      <unstableThreshold>0.0</unstableThreshold>
      <otherFiles>
        <string></string>
      </otherFiles>
      <onlyCritical>true</onlyCritical>
    </hudson.plugins.robot.RobotPublisher>
    <hudson.plugins.git.GitPublisher plugin="git@2.2.7">
      <configVersion>2</configVersion>
      <pushMerge>false</pushMerge>
      <pushOnlyIfSuccess>true</pushOnlyIfSuccess>
      <forcePush>false</forcePush>
      <branchesToPush>
        <hudson.plugins.git.GitPublisher_-BranchToPush>
          <targetRepoName>origin</targetRepoName>
          <branchName>${JOB_NAME}</branchName>
        </hudson.plugins.git.GitPublisher_-BranchToPush>
      </branchesToPush>
    </hudson.plugins.git.GitPublisher>
    <com.rallydev.integration.build.hudson.RallyBuildNotifier plugin="rally-build-notifier@2.4">
      <workspaceName>CPI</workspaceName>
      <projectName>Automation</projectName>
      <service>
        <username>noreply@gmail.com</username>
        <password></password>
        <host>rally1.rallydev.com</host>
        <version>1.21</version>
        <port>-1</port>
        <pluginName>Hudson Plugin</pluginName>
        <pluginVersion>2.1</pluginVersion>
        <secure>true</secure>
        <proxyPort>-1</proxyPort>
      </service>
    </com.rallydev.integration.build.hudson.RallyBuildNotifier>
    <com.cloudbees.jenkins.GitHubCommitNotifier plugin="github@1.9.1"/>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.24">
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>false</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <jenkins.plugins.nodejs.tools.NpmPackagesBuildWrapper plugin="nodejs@0.2.1">
      <nodeJSInstallationName>node</nodeJSInstallationName>
    </jenkins.plugins.nodejs.tools.NpmPackagesBuildWrapper>
  </buildWrappers>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>
